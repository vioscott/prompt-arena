rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other users' public info
    }
    
    // Prompts collection
    match /prompts/{promptId} {
      // Anyone can read approved prompts
      allow read: if resource.data.status == 'approved';
      
      // Users can create prompts
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      
      // Users can update their own prompts
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Users can delete their own prompts
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Orders collection
    match /orders/{orderId} {
      // Users can read orders they're involved in
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.buyerId || 
         request.auth.uid == resource.data.sellerId);
      
      // Users can create orders as buyers
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.buyerId;
      
      // System can update order status (via admin SDK)
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.buyerId || 
         request.auth.uid == resource.data.sellerId);
    }
    
    // Categories collection (read-only for users)
    match /categories/{categoryId} {
      allow read: if true;
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Favorites collection
    match /favorites/{favoriteId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
}
